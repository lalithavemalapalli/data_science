name: "Check for Data Files on Commit"

on:
  push:
  pull_request:

jobs:
  data-file-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: List changed files
        id: file_list
        run: |
          echo "Event Name: $GITHUB_EVENT_NAME"
          if [ "$GITHUB_EVENT_NAME" = "push" ]; then
            if [ -z "$GITHUB_EVENT_BEFORE" ]; then
              echo "No previous commit found. Using empty tree SHA for comparison."
              GITHUB_EVENT_BEFORE="4b825dc642cb6eb9a060e54bf8d69288fbee4904"
            fi
            echo "Comparing commit $GITHUB_EVENT_BEFORE with $GITHUB_SHA"
            git diff --name-only "$GITHUB_EVENT_BEFORE" "$GITHUB_SHA" > files.txt
          else
            echo "Fetching base branch: ${{ github.base_ref }}"
            git fetch origin "${{ github.base_ref }}"
            git diff --name-only HEAD origin/"${{ github.base_ref }}" > files.txt
          fi
          echo "Files changed:"
          cat files.txt

      - name: Check for forbidden data files
        run: |
          # Define forbidden patterns here (customize as needed)
          forbidden_patterns=("data/" "*.csv" "*.jsonl")
          exit_code=0
          while IFS= read -r file; do
            for pattern in "${forbidden_patterns[@]}"; do
              # Check if file path matches a forbidden pattern
              if [[ "$file" == $pattern || "$file" == *"$pattern" ]]; then
                echo "Error: Forbidden file detected: $file (matches pattern: $pattern)"
                exit_code=1
              fi
            done
          done < files.txt
          if [ $exit_code -ne 0 ]; then
            echo "Commit contains forbidden data files. Failing the job."
            exit 1
          else
            echo "No forbidden data files found."
          fi
